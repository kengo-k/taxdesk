---
- hosts: servers
  vars:
    repo_url: https://github.com/kengo-k/tax-account-new
    nodejs_version: 21.7.3
    nodejs_arch: x64
    db_user: {{ lookup('env', 'POSTGRES_USER') }}
    db_password: {{ lookup('env', 'POSTGRES_PASSWORD') }}
    db_name: {{ lookup('env', 'POSTGRES_DB') }}
    dest_path: /app
  tasks:
    - name: Clone source code from Git repository
      git:
        repo: '{{ repo_url }}'
        dest: '{{ dest_path }}'
        force: yes

    #
    # setup postgresql
    #

    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present

    - name: Install psycopg2
      apt:
        name: python3-psycopg2
        state: present

    - name: Create PostgreSQL user
      become: yes
      become_user: postgres
      postgresql_user:
        name: '{{ db_user }}'
        password: '{{ db_password }}'
      vars:
        ansible_remote_tmp: /tmp/.ansible

    - name: Create PostgreSQL database
      become: yes
      become_user: postgres
      postgresql_db:
        name: '{{ db_name }}'
        owner: '{{ db_user }}'
      vars:
        ansible_remote_tmp: /tmp/.ansible

    #
    # setup nodejs
    #

    - name: Download Node.js package
      get_url:
        url: 'https://nodejs.org/dist/v{{ nodejs_version }}/node-v{{ nodejs_version }}-linux-{{ nodejs_arch }}.tar.xz'
        dest: '/tmp/node-v{{ nodejs_version }}-linux-{{ nodejs_arch }}.tar.xz'

    - name: Extract Node.js package
      unarchive:
        src: '/tmp/node-v{{ nodejs_version }}-linux-{{ nodejs_arch }}.tar.xz'
        dest: '/tmp'
        remote_src: yes

    - name: Create installation directory
      file:
        path: /usr/local/node
        state: directory

    - name: Copy Node.js files to installation directory
      copy:
        src: '/tmp/node-v{{ nodejs_version }}-linux-{{ nodejs_arch }}/'
        dest: /usr/local/node
        remote_src: yes

    - name: Create symlinks for Node.js and npm
      file:
        src: '/usr/local/node/bin/{{ item }}'
        dest: '/usr/local/bin/{{ item }}'
        state: link
      with_items:
        - node
        - npm

    - name: Clean up temporary files
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - '/tmp/node-v{{ nodejs_version }}-linux-{{ nodejs_arch }}.tar.xz'
        - '/tmp/node-v{{ nodejs_version }}-linux-{{ nodejs_arch }}'
