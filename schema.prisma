generator client {
  provider = "prisma-client-js"
  // Uncomment the next line if you're using a Mac with an Apple Silicon chip (e.g., M1, M2)
  // binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model journals {
  id             Int      @id @default(autoincrement())
  nendo          String   @db.VarChar(4)
  date           String   @db.VarChar(8)
  karikata_cd    String   @db.VarChar(5)
  karikata_value Int
  kasikata_cd    String   @db.VarChar(5)
  kasikata_value Int
  note           String?
  checked        String   @db.VarChar(1) @default("0")
  created_at     DateTime @db.Timestamp(6)
  updated_at     DateTime @db.Timestamp(6)
  deleted        String   @db.VarChar(1) @default("0")

  // Foreign key references
  nendo_master   nendo_masters @relation(fields: [nendo], references: [nendo])
  karikata       saimoku_masters @relation("KarikataJournals", fields: [karikata_cd], references: [saimoku_cd])
  kasikata       saimoku_masters @relation("KasikataJournals", fields: [kasikata_cd], references: [saimoku_cd])

  // Optimized indexes for journals table
  // 1. 基本検索・ソート対応
  @@index([nendo, deleted, date, created_at], map: "journals_base_index")

  // 2. 借方コード検索対応 (list-ledgers.ts メイン)
  @@index([nendo, deleted, karikata_cd, date, created_at], map: "journals_karikata_index")

  // 3. 貸方コード検索対応 (list-ledgers.ts メイン)
  @@index([nendo, deleted, kasikata_cd, date, created_at], map: "journals_kasikata_index")

  // 4. 確認状態検索対応 (確認済み/未確認絞り込み)
  @@index([nendo, deleted, checked, date, created_at], map: "journals_checked_index")

  // 5. 複合コード検索対応 (count-by-account.ts)
  @@index([nendo, deleted, karikata_cd, kasikata_cd, date, created_at], map: "journals_codes_index")

  // 6. 借方集計処理専用 (calculate-breakdown.ts カバリングインデックス)
  @@index([nendo, deleted, karikata_cd, karikata_value, date], map: "journals_karikata_sum_index")

  // 7. 貸方集計処理専用 (calculate-breakdown.ts カバリングインデックス)
  @@index([nendo, deleted, kasikata_cd, kasikata_value, date], map: "journals_kasikata_sum_index")

}

model kamoku_bunrui_masters {
  id                 Int      @id @default(autoincrement())
  kamoku_bunrui_cd   String   @db.VarChar(1) @unique
  kamoku_bunrui_name String   @db.VarChar(8)
  kamoku_bunrui_type String   @db.VarChar(1)
  kurikoshi_flg      String   @db.VarChar(1)
  created_at         DateTime @db.Timestamp(6)
  updated_at         DateTime @db.Timestamp(6)

  // Relations
  kamoku_masters     kamoku_masters[]
}

model kamoku_masters {
  id                Int      @id @default(autoincrement())
  kamoku_cd         String   @db.VarChar(2) @unique
  kamoku_full_name  String
  kamoku_ryaku_name String
  kamoku_kana_name  String
  kamoku_bunrui_cd  String   @db.VarChar(1)
  description       String?
  custom_fields     Json?
  created_at        DateTime @db.Timestamp(6)
  updated_at        DateTime @db.Timestamp(6)

  // Foreign key references
  kamoku_bunrui     kamoku_bunrui_masters @relation(fields: [kamoku_bunrui_cd], references: [kamoku_bunrui_cd])

  // Relations
  saimoku_masters   saimoku_masters[]
}

model nendo_masters {
  id                     Int      @id @default(autoincrement())
  nendo                  String   @db.VarChar(4) @unique
  start_date             String   @db.VarChar(8)
  end_date               String   @db.VarChar(8)
  fixed                  String   @db.VarChar(1)
  consumption_tax_type   String   @db.VarChar(15) @default("EXEMPT") // EXEMPT: 免税, SIMPLIFIED: 簡易課税, STANDARD: 一般課税
  statutory_tax_rate     Decimal? @db.Decimal(5, 2) // 簡易課税の場合のみなし仕入率 (%) - 第一種: 90%, 第二種: 80%...
  created_at             DateTime @db.Timestamp(6)
  updated_at             DateTime @db.Timestamp(6)

  // Relations
  journals              journals[]
  payroll_payments      payroll_payments[]
}

model saimoku_masters {
  id                 Int                      @id @default(autoincrement())
  kamoku_cd          String                   @db.VarChar(2)
  saimoku_cd         String                   @db.VarChar(3) @unique
  saimoku_full_name  String
  saimoku_ryaku_name String
  saimoku_kana_name  String
  description        String?
  custom_fields      Json?
  created_at         DateTime                 @db.Timestamp(6)
  updated_at         DateTime                 @db.Timestamp(6)
  valid_from         String                   @db.VarChar(8) @default("20000101")
  valid_to           String                   @db.VarChar(8) @default("99991231")

  // Foreign key references
  kamoku_master      kamoku_masters @relation(fields: [kamoku_cd], references: [kamoku_cd])

  // Relations
  karikata_journals  journals[] @relation("KarikataJournals")
  kasikata_journals  journals[] @relation("KasikataJournals")
}

model backups {
  id                 Int      @id @default(autoincrement())
  backup_id          String
  version            String
  note               String?
  created_at         DateTime @db.Timestamp(6)
  updated_at         DateTime @db.Timestamp(6)
}

model payroll_payments {
  id                 Int      @id @default(autoincrement())
  fiscal_year        String   @db.VarChar(4)
  month              Int
  is_paid            Boolean  @default(false)
  created_at         DateTime @db.Timestamp(6) @default(now())

  // Foreign key reference
  nendo_master       nendo_masters @relation(fields: [fiscal_year], references: [nendo])

  // Unique constraint to prevent duplicate entries for the same fiscal year and month
  @@unique([fiscal_year, month])
}
